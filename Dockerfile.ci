# Build stage
FROM node:18-bullseye as builder

WORKDIR /app

# 复制项目文件
COPY . .

# 创建必要的目录
RUN mkdir -p ts/node_modules/zkwasm-ts-server/src/application

# 复制预构建的 WASM 文件
COPY build-artifacts/application/* ts/node_modules/zkwasm-ts-server/src/application/

# 安装 npm 依赖但不编译 TypeScript（可能需要先安装一些依赖）
RUN cd ts && npm install

# 确保 zkwasm-ts-server 模块存在
RUN if [ ! -d "ts/node_modules/zkwasm-ts-server" ]; then \
      echo "zkwasm-ts-server module not found, installing..." && \
      cd ts && npm install zkwasm-ts-server || echo "Failed to install zkwasm-ts-server, but continuing..."; \
    fi

# 复制 zkwasm-ts-server 源码（如果有的话）
RUN if [ -d "zkwasm-ts-server" ]; then \
      echo "Copying zkwasm-ts-server source code..." && \
      cp -r zkwasm-ts-server/* ts/node_modules/zkwasm-ts-server/ || echo "Failed to copy zkwasm-ts-server source code, but continuing..."; \
    fi

# 显示目录结构以便调试
RUN echo "Directory structure:" && \
    ls -la ts/node_modules && \
    echo "zkwasm-ts-server directory:" && \
    ls -la ts/node_modules/zkwasm-ts-server/src || echo "zkwasm-ts-server/src directory not found"

# 尝试编译 TypeScript
RUN cd ts && \
    echo "TypeScript files:" && \
    find . -name "*.ts" | sort && \
    echo "Compiling TypeScript..." && \
    npx tsc || echo "TypeScript compilation failed, but continuing..."

# Run publish script with retries (if needed)
RUN if [ -f ts/publish.sh ]; then \
      chmod +x ts/publish.sh && \
      cd ts && \
      for i in 1 2 3; do \
        echo "----------------------------------------" && \
        echo "Starting attempt $i to publish image..." && \
        echo "Running: publish.sh" && \
        echo "----------------------------------------" && \
        output=$(./publish.sh 2>&1) && \
        echo "Command output:" && \
        echo "$output" && \
        echo "----------------------------------------" && \
        if echo "$output" | grep -q "already exists\|Add Image Response"; then \
          echo "Successfully published image" && \
          break; \
        else \
          if [ $i -eq 3 ]; then \
            echo "Failed to publish image after 3 attempts" && \
            echo "Last error output:" && \
            echo "$output" && \
            exit 1; \
          fi; \
          echo "Publish failed, retrying in 5 seconds..." && \
          echo "Error output:" && \
          echo "$output" && \
          sleep 5; \
        fi; \
      done; \
    else \
      echo "Skipping image publishing (publish.sh not found)"; \
    fi

# Production stage
FROM node:18-slim

# 设置非敏感环境变量
ENV NODE_ENV="production"

WORKDIR /app

# Copy all necessary files from builder
COPY --from=builder /app/ts ./ts
COPY --from=builder /app/src/admin.pubkey ./src/admin.pubkey

# Create user first
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Switch to non-root user
USER appuser

EXPOSE 3000
# 应用将从 Kubernetes Secret 获取环境变量
CMD ["node", "./ts/src/service.js"]